{"remainingRequest":"C:\\D\\Wind\\Blog\\web\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\D\\Wind\\Blog\\web\\admin\\src\\views\\article\\Article.vue?vue&type=style&index=0&id=13a80313&scoped=true&lang=css&","dependencies":[{"path":"C:\\D\\Wind\\Blog\\web\\admin\\src\\views\\article\\Article.vue","mtime":1676894149086},{"path":"C:\\D\\Wind\\Blog\\web\\admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":1686291314469},{"path":"C:\\D\\Wind\\Blog\\web\\admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1686291311203},{"path":"C:\\D\\Wind\\Blog\\web\\admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1686291307318},{"path":"C:\\D\\Wind\\Blog\\web\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686291304238},{"path":"C:\\D\\Wind\\Blog\\web\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1686291309679}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZWQgewogIGhlaWdodDogY2FsYygxMDB2aCAtIDI2MHB4KTsKfQoKLmFydGljbGUtdGl0bGUtY29udGFpbmVyIHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgbWFyZ2luLWJvdHRvbTogMS4yNXJlbTsKICBtYXJnaW4tdG9wOiAyLjI1cmVtOwp9Cgouc2F2ZS1idG4gewogIG1hcmdpbi1sZWZ0OiAwLjc1cmVtOwogIGJhY2tncm91bmQ6ICNmZmY7CiAgY29sb3I6ICNmNTZjNmM7Cn0KCi50YWctaXRlbSB7CiAgbWFyZ2luLXJpZ2h0OiAxcmVtOwogIG1hcmdpbi1ib3R0b206IDFyZW07CiAgY3Vyc29yOiBwb2ludGVyOwp9CgoudGFnLWl0ZW0tc2VsZWN0IHsKICBtYXJnaW4tcmlnaHQ6IDFyZW07CiAgbWFyZ2luLWJvdHRvbTogMXJlbTsKICBjdXJzb3I6IG5vdC1hbGxvd2VkOwogIGNvbG9yOiAjY2NjY2Q4ICFpbXBvcnRhbnQ7Cn0KCi5jYXRlZ29yeS1pdGVtIHsKICBjdXJzb3I6IHBvaW50ZXI7CiAgcGFkZGluZzogMC42cmVtIDAuNXJlbTsKfQoKLmNhdGVnb3J5LWl0ZW06aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6ICNmMGY5ZWI7CiAgY29sb3I6ICM2N2MyM2E7Cn0KCi5wb3BvdmVyLXRpdGxlIHsKICBtYXJnaW4tYm90dG9tOiAxcmVtOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKLnBvcG92ZXItY29udGFpbmVyIHsKICBtYXJnaW4tdG9wOiAxcmVtOwogIGhlaWdodDogMjYwcHg7CiAgb3ZlcmZsb3cteTogYXV0bzsKfQo="},{"version":3,"sources":["Article.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8bA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Article.vue","sourceRoot":"src/views/article","sourcesContent":["<template>\n  <el-card class=\"main-card\">\n    <div class=\"title\">{{ this.$route.name }}</div>\n    <!-- 文章标题 -->\n    <div class=\"article-title-container\">\n      <el-input v-model=\"article.articleTitle\" size=\"medium\" placeholder=\"输入文章标题\" />\n      <el-button type=\"danger\" size=\"medium\" class=\"save-btn\" @click=\"saveArticleDraft\"\n        v-if=\"article.id == null || article.status == 3\">\n        保存草稿\n      </el-button>\n      <el-button type=\"danger\" size=\"medium\" @click=\"openModel\" style=\"margin-left:10px\">\n        发布文章\n      </el-button>\n    </div>\n    <!-- 文章内容 -->\n    <v-md-editor v-model=\"article.articleContent\" class=\"ed\" :disabled-menus=\"[]\"\n      @upload-image=\"uploadImg\">\n    </v-md-editor>\n\n    <!-- <mavon-editor ref=\"md\" v-model=\"article.articleContent\" @imgAdd=\"uploadImg\" style=\"height:calc(100vh - 260px)\" navigation/> -->\n    <!-- 添加文章对话框 -->\n    <el-dialog :visible.sync=\"addOrEdit\" width=\"40%\" top=\"3vh\">\n      <div class=\"dialog-title-container\" slot=\"title\">\n        发布文章\n      </div>\n      <!-- 文章数据 -->\n      <el-form label-width=\"80px\" size=\"medium\" :model=\"article\">\n        <!-- 文章分类 -->\n        <el-form-item label=\"文章分类\">\n          <el-tag type=\"success\" v-show=\"article.categoryName\" style=\"margin:0 1rem 0 0\" :closable=\"true\"\n            @close=\"removeCategory\">\n            {{ article.categoryName }}\n          </el-tag>\n          <!-- 分类选项 -->\n          <el-popover placement=\"bottom-start\" width=\"460\" trigger=\"click\" v-if=\"!article.categoryName\">\n            <div class=\"popover-title\">分类</div>\n            <!-- 搜索框 -->\n            <el-autocomplete style=\"width:100%\" v-model=\"categoryName\" :fetch-suggestions=\"searchCategories\"\n              placeholder=\"请输入分类名搜索，enter可添加自定义分类\" :trigger-on-focus=\"false\" @keyup.enter.native=\"saveCategory\"\n              @select=\"handleSelectCategories\">\n              <template slot-scope=\"{ item }\">\n                <div>{{ item.categoryName }}</div>\n              </template>\n            </el-autocomplete>\n            <!-- 分类 -->\n            <div class=\"popover-container\">\n              <div v-for=\"item of categoryList\" :key=\"item.id\" class=\"category-item\" @click=\"addCategory(item)\">\n                {{ item.categoryName }}\n              </div>\n            </div>\n            <el-button type=\"success\" plain slot=\"reference\" size=\"small\">\n              添加分类\n            </el-button>\n          </el-popover>\n        </el-form-item>\n        <!-- 文章标签 -->\n        <el-form-item label=\"文章标签\">\n          <el-tag v-for=\"(item, index) of article.tagNameList\" :key=\"index\" style=\"margin:0 1rem 0 0\" :closable=\"true\"\n            @close=\"removeTag(item)\">\n            {{ item }}\n          </el-tag>\n          <!-- 标签选项 -->\n          <el-popover placement=\"bottom-start\" width=\"460\" trigger=\"click\" v-if=\"article.tagNameList.length < 3\">\n            <div class=\"popover-title\">标签</div>\n            <!-- 搜索框 -->\n            <el-autocomplete style=\"width:100%\" v-model=\"tagName\" :fetch-suggestions=\"searchTags\"\n              placeholder=\"请输入标签名搜索，enter可添加自定义标签\" :trigger-on-focus=\"false\" @keyup.enter.native=\"saveTag\"\n              @select=\"handleSelectTag\">\n              <template slot-scope=\"{ item }\">\n                <div>{{ item.tagName }}</div>\n              </template>\n            </el-autocomplete>\n            <!-- 标签 -->\n            <div class=\"popover-container\">\n              <div style=\"margin-bottom:1rem\">添加标签</div>\n              <el-tag v-for=\"(item, index) of tagList\" :key=\"index\" :class=\"tagClass(item)\" @click=\"addTag(item)\">\n                {{ item.tagName }}\n              </el-tag>\n            </div>\n            <el-button type=\"primary\" plain slot=\"reference\" size=\"small\">\n              添加标签\n            </el-button>\n          </el-popover>\n        </el-form-item>\n        <el-form-item label=\"文章类型\">\n          <el-select v-model=\"article.type\" placeholder=\"请选择类型\">\n            <el-option v-for=\"item in typeList\" :key=\"item.type\" :label=\"item.desc\" :value=\"item.type\" />\n          </el-select>\n        </el-form-item>\n        <!-- 文章类型 -->\n        <el-form-item label=\"原文地址\" v-if=\"article.type != 1\">\n          <el-input v-model=\"article.originalUrl\" placeholder=\"请填写原文链接\" />\n        </el-form-item>\n        <el-form-item label=\"上传封面\">\n          <el-upload class=\"upload-cover\" multiple :before-upload=\"beforeUpload\" :on-success=\"uploadCover\" drag\n            action=\"/api/admin/articles/images\">\n            <i class=\"el-icon-upload\" v-if=\"article.articleCover == ''\" />\n            <div class=\"el-upload__text\" v-if=\"article.articleCover == ''\">\n              将文件拖到此处，或<em>点击上传</em>\n            </div>\n            <img v-else :src=\"article.articleCover\" width=\"360px\" height=\"180px\" />\n          </el-upload>\n        </el-form-item>\n        <el-form-item label=\"置顶\">\n          <el-switch v-model=\"article.isTop\" active-color=\"#13ce66\" inactive-color=\"#F4F4F5\" :active-value=\"1\"\n            :inactive-value=\"0\" />\n        </el-form-item>\n        <el-form-item label=\"发布形式\">\n          <el-radio-group v-model=\"article.status\">\n            <el-radio :label=\"1\">公开</el-radio>\n            <el-radio :label=\"2\">私密</el-radio>\n          </el-radio-group>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\">\n        <el-button @click=\"addOrEdit = false\">取 消</el-button>\n        <el-button type=\"danger\" @click=\"saveOrUpdateArticle\">\n          发 表\n        </el-button>\n      </div>\n    </el-dialog>\n  </el-card>\n</template>\n\n<script>\nimport * as imageConversion from \"image-conversion\";\nexport default {\n  created() {\n    const path = this.$route.path;\n    const arr = path.split(\"/\");\n    const articleId = arr[2];\n    if (articleId) {\n      this.axios.get(\"/api/admin/articles/\" + articleId).then(({ data }) => {\n        this.article = data.data;\n      });\n    } else {\n      const article = sessionStorage.getItem(\"article\");\n      if (article) {\n        this.article = JSON.parse(article);\n      }\n    }\n  },\n  destroyed() {\n    //文章自动保存功能\n    this.autoSaveArticle();\n  },\n  data: function () {\n    return {\n      toolbarText: \"\",\n      addOrEdit: false,\n      autoSave: true,\n      categoryName: \"\",\n      tagName: \"\",\n      categoryList: [],\n      tagList: [],\n      typeList: [\n        {\n          type: 1,\n          desc: \"原创\",\n        },\n        {\n          type: 2,\n          desc: \"转载\",\n        },\n        {\n          type: 3,\n          desc: \"翻译\",\n        },\n      ],\n      article: {\n        id: null,\n        articleTitle: this.$moment(new Date()).format(\"YYYY-MM-DD\"),\n        articleContent: \"\",\n        articleCover: \"\",\n        categoryName: null,\n        tagNameList: [],\n        originalUrl: \"\",\n        isTop: 0,\n        type: 1,\n        status: 1,\n      },\n    };\n  },\n  methods: {\n    getEditorHeight() {\n\n      document.getElementsByClassName(\"main-card\")\n    },\n    listCategories() {\n      this.axios.get(\"/api/admin/categories/search\").then(({ data }) => {\n        this.categoryList = data.data;\n      });\n    },\n    listTags() {\n      this.axios.get(\"/api/admin/tags/search\").then(({ data }) => {\n        this.tagList = data.data;\n      });\n    },\n    openModel() {\n      if (this.article.articleTitle.trim() == \"\") {\n        this.$message.error(\"文章标题不能为空\");\n        return false;\n      }\n      if (this.article.articleContent.trim() == \"\") {\n        this.$message.error(\"文章内容不能为空\");\n        return false;\n      }\n      this.listCategories();\n      this.listTags();\n      this.addOrEdit = true;\n    },\n    uploadCover(response) {\n      this.article.articleCover = response.data;\n    },\n    beforeUpload(file) {\n      return new Promise((resolve) => {\n        if (file.size / 1024 < this.config.UPLOAD_SIZE) {\n          resolve(file);\n        }\n        // 压缩到200KB,这里的200就是要压缩的大小,可自定义\n        imageConversion\n          .compressAccurately(file, this.config.UPLOAD_SIZE)\n          .then((res) => {\n            resolve(res);\n          });\n      });\n    },\n    uploadImg(event, insertImage, files) {\n      console.log(files)\n      let file = files[0]\n      var formdata = new FormData();\n      if (file.size / 1024 < this.config.UPLOAD_SIZE) {\n        formdata.append(\"file\", file);\n        this.axios\n          .post(\"/api/admin/articles/images\", formdata)\n          .then(res => {\n            // 此处只做示例\n            insertImage({\n              url: res.data.data,\n            });\n            //this.$refs.md.$img2Url(pos, res.data.data);\n          });\n      } else {\n        // 压缩到200KB,这里的200就是要压缩的大小,可自定义\n        imageConversion\n          .compressAccurately(file, this.config.UPLOAD_SIZE)\n          .then((res) => {\n            formdata.append(\n              \"file\",\n              new window.File([res], file.name, { type: file.type })\n            );\n            this.axios\n              .post(\"/api/admin/articles/images\", formdata)\n              .then(res => {\n                insertImage({\n                  url: res.data.data,\n                });\n              });\n          });\n      }\n    },\n    saveArticleDraft() {\n      if (this.article.articleTitle.trim() == \"\") {\n        this.$message.error(\"文章标题不能为空\");\n        return false;\n      }\n      if (this.article.articleContent.trim() == \"\") {\n        this.$message.error(\"文章内容不能为空\");\n        return false;\n      }\n      this.article.status = 3;\n      this.axios.post(\"/api/admin/articles\", this.article).then(({ data }) => {\n        if (data.flag) {\n          if (this.article.id === null) {\n            this.$store.commit(\"removeTab\", \"发布文章\");\n          } else {\n            this.$store.commit(\"removeTab\", \"修改文章\");\n          }\n          sessionStorage.removeItem(\"article\");\n          this.$router.push({ path: \"/article-list\" });\n          this.$notify.success({\n            title: \"成功\",\n            message: \"保存草稿成功\",\n          });\n        } else {\n          this.$notify.error({\n            title: \"失败\",\n            message: \"保存草稿失败\",\n          });\n        }\n      });\n\n      //关闭自动保存功能\n      this.autoSave = false;\n    },\n    saveOrUpdateArticle() {\n      if (this.article.articleTitle.trim() == \"\") {\n        this.$message.error(\"文章标题不能为空\");\n        return false;\n      }\n      if (this.article.articleContent.trim() == \"\") {\n        this.$message.error(\"文章内容不能为空\");\n        return false;\n      }\n      if (this.article.categoryName == null) {\n        this.$message.error(\"文章分类不能为空\");\n        return false;\n      }\n      if (this.article.tagNameList.length == 0) {\n        this.$message.error(\"文章标签不能为空\");\n        return false;\n      }\n      if (this.article.articleCover.trim() == \"\") {\n        this.$message.error(\"文章封面不能为空\");\n        return false;\n      }\n      // console.log(this.article);\n      this.axios.post(\"/api/admin/articles\", this.article).then(({ data }) => {\n        if (data.flag) {\n          if (this.article.id === null) {\n            this.$store.commit(\"removeTab\", \"发布文章\");\n          } else {\n            this.$store.commit(\"removeTab\", \"修改文章\");\n          }\n          sessionStorage.removeItem(\"article\");\n          this.$router.push({ path: \"/article-list\" });\n          this.$notify.success({\n            title: \"成功\",\n            message: data.message\n          });\n        } else {\n          this.$notify.error({\n            title: \"失败\",\n            message: data.message\n          });\n        }\n        this.addOrEdit = false;\n      });\n      //关闭自动保存功能\n      this.autoSave = false;\n    },\n    autoSaveArticle() {\n      // 自动上传文章\n      if (\n        this.autoSave &&\n        this.article.articleTitle.trim() != \"\" &&\n        this.article.articleContent.trim() != \"\" &&\n        this.article.id != null\n      ) {\n        this.axios\n          .post(\"/api/admin/articles\", this.article)\n          .then(({ data }) => {\n            if (data.flag) {\n              this.$notify.success({\n                title: \"成功\",\n                message: \"自动保存成功\",\n              });\n            } else {\n              this.$notify.error({\n                title: \"失败\",\n                message: \"自动保存失败\",\n              });\n            }\n          });\n      }\n      // 保存本地文章记录\n      if (this.autoSave && this.article.id == null) {\n        sessionStorage.setItem(\"article\", JSON.stringify(this.article));\n      }\n    },\n    searchCategories(keywords, cb) {\n      this.axios\n        .get(\"/api/admin/categories/search\", {\n          params: {\n            keywords: keywords,\n          },\n        })\n        .then(({ data }) => {\n          cb(data.data);\n        });\n    },\n    handleSelectCategories(item) {\n      this.addCategory({\n        categoryName: item.categoryName,\n      });\n    },\n    saveCategory() {\n      if (this.categoryName.trim() != \"\") {\n        this.addCategory({\n          categoryName: this.categoryName,\n        });\n        this.categoryName = \"\";\n      }\n    },\n    addCategory(item) {\n      this.article.categoryName = item.categoryName;\n    },\n    removeCategory() {\n      this.article.categoryName = null;\n    },\n    searchTags(keywords, cb) {\n      this.axios\n        .get(\"/api/admin/tags/search\", {\n          params: {\n            keywords: keywords,\n          },\n        })\n        .then(({ data }) => {\n          cb(data.data);\n        });\n    },\n    handleSelectTag(item) {\n      this.addTag({\n        tagName: item.tagName,\n      });\n    },\n    saveTag() {\n      if (this.tagName.trim() != \"\") {\n        this.addTag({\n          tagName: this.tagName,\n        });\n        this.tagName = \"\";\n      }\n    },\n    addTag(item) {\n      if (this.article.tagNameList.indexOf(item.tagName) == -1) {\n        this.article.tagNameList.push(item.tagName);\n      }\n    },\n    removeTag(item) {\n      const index = this.article.tagNameList.indexOf(item);\n      this.article.tagNameList.splice(index, 1);\n    },\n  },\n  computed: {\n    tagClass() {\n      return function (item) {\n        const index = this.article.tagNameList.indexOf(item.tagName);\n        return index != -1 ? \"tag-item-select\" : \"tag-item\";\n      };\n    },\n  },\n};\n</script>\n\n<style scoped>\n.ed {\n  height: calc(100vh - 260px);\n}\n\n.article-title-container {\n  display: flex;\n  align-items: center;\n  margin-bottom: 1.25rem;\n  margin-top: 2.25rem;\n}\n\n.save-btn {\n  margin-left: 0.75rem;\n  background: #fff;\n  color: #f56c6c;\n}\n\n.tag-item {\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n  cursor: pointer;\n}\n\n.tag-item-select {\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n  cursor: not-allowed;\n  color: #ccccd8 !important;\n}\n\n.category-item {\n  cursor: pointer;\n  padding: 0.6rem 0.5rem;\n}\n\n.category-item:hover {\n  background-color: #f0f9eb;\n  color: #67c23a;\n}\n\n.popover-title {\n  margin-bottom: 1rem;\n  text-align: center;\n}\n\n.popover-container {\n  margin-top: 1rem;\n  height: 260px;\n  overflow-y: auto;\n}\n</style>\n"]}]}